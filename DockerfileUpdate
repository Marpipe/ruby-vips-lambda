FROM lambci/lambda:build-ruby2.7

WORKDIR /build

ARG VIPS_VERSION=8.10.2

ENV VIPS_VERSION=$VIPS_VERSION
ENV PATH=/opt/bin:/cargo/bin:$PATH
ENV LD_LIBRARY_PATH=/opt/lib:/opt/lib64:$LD_LIBRARY_PATH
ENV PKG_CONFIG_PATH=/opt/lib/pkgconfig:/opt/lib64/pkgconfig

# Setup Some Dirs

RUN mkdir -p \
    share/lib \
    share/include \
    share/etc/pango \
    share/lib/pango/1.8.0

# Install expat
#
RUN curl https://codeload.github.com/libexpat/libexpat/zip/R_2_2_9 > libexpat-R_2_2_9.zip && \
    unzip libexpat-R_2_2_9.zip && \
    cd ./libexpat-R_2_2_9/expat && \
    ./buildconf.sh && \
    ./configure --prefix=/opt && \
    make install

RUN cp -a /opt/lib/libexpat.so* /build/share/lib

# Install libpng
#
RUN curl -L https://downloads.sourceforge.net/libpng/libpng-1.6.37.tar.xz > libpng-1.6.37.tar.xz && \
    tar -xf libpng-1.6.37.tar.xz && \
    cd libpng-1.6.37 && \
    ./configure --prefix=/opt --disable-static && \
    make && \
    make install

RUN cp -a /opt/lib/libpng.so* /build/share/lib && \
    cp -a /opt/lib/libpng16.so* /build/share/lib

# Install giflib
#
RUN curl -L https://sourceforge.net/projects/giflib/files/giflib-5.2.1.tar.gz > giflib-5.2.1.tar.gz && \
    tar -xf giflib-5.2.1.tar.gz && \
    cd giflib-5.2.1 && \
    make && \
    make PREFIX=/opt install

RUN cp -a /opt/lib/libgif.so* /build/share/lib

# Install libjpeg-turbo
#
RUN curl -L https://downloads.sourceforge.net/libjpeg-turbo/libjpeg-turbo-2.0.4.tar.gz > libjpeg-turbo-2.0.4.tar.gz && \
    tar -xf libjpeg-turbo-2.0.4.tar.gz && \
    cd libjpeg-turbo-2.0.4 && \
    cmake -DCMAKE_INSTALL_PREFIX=/opt && \
    make && \
    make install

RUN cp -a /opt/lib64/libjpeg.so* /build/share/lib && \
    cp -a /opt/lib64/libturbojpeg.so* /build/share/lib

# Install libimagequant
#
RUN git clone https://github.com/ImageOptim/libimagequant.git && \
    cd ./libimagequant && \
    git checkout 2.12.6 && \
    ./configure --prefix=/opt && \
    make libimagequant.so && \
    make install && \
    echo /opt/lib > /etc/ld.so.conf.d/libimagequant.conf && \
    ldconfig

RUN cp -a /opt/lib/libimagequant.so* /build/share/lib/ && \
    cp -a /opt/include/libimagequant.h /build/share/include/

# Install libvips. Primary deps https://libvips.github.io/libvips/install.html
#
RUN yum install -y \
    gtk-doc \
    ninja-build \
    libffi-devel

RUN pip3 install meson && \
    pip3 install ninja

RUN curl -L http://ftp.gnome.org/pub/gnome/sources/glib/2.64/glib-2.64.2.tar.xz > glib-2.64.2.tar.xz && \
    tar -xf glib-2.64.2.tar.xz && \
    cd glib-2.64.2 && \
    mkdir ./_build && \
    cd ./_build && \
    meson --prefix=/opt .. && \
    ninja && \
    ninja install

# RUN cp -a /opt/lib64/libffi.so* /build/share/lib && \
RUN cp -a /opt/lib64/libglib-2.0.so* /build/share/lib && \
    cp -a /opt/lib64/libgmodule-2.0.so* /build/share/lib && \
    cp -a /opt/lib64/libgobject-2.0.so* /build/share/lib && \
    cp -a /opt/lib64/libgthread-2.0.so* /build/share/lib

RUN curl -L http://ftp.gnome.org/pub/gnome/sources/gobject-introspection/1.64/gobject-introspection-1.64.1.tar.xz > gobject-introspection-1.64.1.tar.xz && \
    tar -xf gobject-introspection-1.64.1.tar.xz && \
    cd gobject-introspection-1.64.1 && \
    mkdir ./_build && \
    cd ./_build && \
    meson --prefix=/opt .. && \
    ninja && \
    ninja install

# Install librsvg and pango all the annoying stuff they depend on
#

#libcroco needs xml. FontConfig & cairo need the other stuff

RUN curl -L https://downloads.sourceforge.net/freetype/freetype-2.10.2.tar.xz > freetype-2.10.2.tar.xz && \
    tar -xf freetype-2.10.2.tar.xz && \
    cd freetype-2.10.2 && \
    ./configure --prefix=/opt --disable-static && \
    make && \
    make install

RUN cp -a /opt/lib/libfreetype.so* /build/share/lib

RUN curl -L  https://www.cairographics.org/releases/pixman-0.40.0.tar.gz > pixman-0.40.0.tar.gz && \
    tar xvf pixman-0.40.0.tar.gz && \
    cd pixman-0.40.0 && \
    ./configure --prefix=/opt --disable-static && \
    make && \
    make install

RUN cp -a /opt/lib/libpixman-1.so* /build/share/lib

RUN yum install -y pixman-devel \ 
    harfbuzz-devel \
    freetype-devel \
    pango-devel \
    libxml2-devel

RUN curl -L http://ftp.gnome.org/pub/GNOME/sources/libcroco/0.6/libcroco-0.6.8.tar.xz > libcroco-0.6.8.tar.xz && \
    tar -xf libcroco-0.6.8.tar.xz && \
    cd libcroco-0.6.8 && \
    ./configure --prefix=/opt --disable-static && \
    make && \
    make install

RUN cp -a /opt/lib/libcroco-0.6.so* /build/share/lib

RUN curl -L https://github.com/harfbuzz/harfbuzz/releases/download/2.6.8/harfbuzz-2.6.8.tar.xz > harfbuzz-2.6.8.tar.xz && \
    tar -xf harfbuzz-2.6.8.tar.xz && \
    cd harfbuzz-2.6.8 && \
    ./configure --prefix=/opt --disable-static && \
    make && \
    make install

RUN cp -a /opt/lib/libharfbuzz.so* /build/share/lib

RUN curl -L http://www.freedesktop.org/software/fontconfig/release/fontconfig-2.10.91.tar.gz > fontconfig-2.10.91.tar.gz && \
    tar xvf fontconfig-2.10.91.tar.gz && \
    cd fontconfig-2.10.91 && \
    ./configure --prefix=/opt --disable-static --disable-docs && \
    make && \
    make install

RUN cp -a /opt/lib/libfontconfig.so* /build/share/lib

RUN curl -L http://cairographics.org/releases/cairo-1.16.0.tar.xz > cairo-1.16.0.tar.xz && \
    tar xvfJ cairo-1.16.0.tar.xz && \
    cd cairo-1.16.0 && \
    ./configure --prefix=/opt --disable-static && \
    make && \
    make install

RUN cp -a /opt/lib/libcairo.so* /build/share/lib && \
cp -a /opt/lib/libcairo-gobject.so* /build/share/lib
# cp -a /opt/lib/libcairo-script-interpreter.so*  /build/share/lib

RUN curl -L http://ftp.gnome.org/pub/GNOME/sources/pango/1.40/pango-1.40.6.tar.xz > pango-1.40.6.tar.xz && \
    tar xvfJ pango-1.40.6.tar.xz && \
    cd pango-1.40.6 && \
    # mkdir ./_build && \
    # cd ./_build && \
    # meson --prefix=/opt .. && \
    # ninja && \
    # ninja install
     ./configure --prefix=/opt --disable-static && \
    make && \
    make install

# RUN pango-querymodules --update-cache

RUN cp -a /opt/lib/libpango-1.0.so* /build/share/lib && \
    cp -a /opt/lib/libpangocairo-1.0.so* /build/share/lib && \
    cp -a /opt/lib/libpangoft2-1.0.so* /build/share/lib
    # cp -a /opt/etc/pango  /* /build/share/etc/pango && \
    # cp -a /opt/lib/pango/1.8.0/* /build/share/lib/pango/1.8.0


RUN curl -L http://ftp.gnome.org/pub/gnome/sources/gdk-pixbuf/2.36/gdk-pixbuf-2.36.8.tar.xz > gdk-pixbuf-2.36.8.tar.xz && \
    tar xvfJ gdk-pixbuf-2.36.8.tar.xz && \
    cd gdk-pixbuf-2.36.8 && \
    ./configure --prefix=/opt --disable-static --without-libjpeg --without-libtiff && \
    make && \
    make install

RUN cp -a /opt/lib/libgdk_pixbuf-2.0.so* /build/share/lib 
RUN cp -a -R /opt/lib/gdk-pixbuf-2.0 /build/share/lib 

ARG RUST_VERSION=1.45.2
RUN yum install -y jq
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
    | CARGO_HOME=/cargo RUSTUP_HOME=/rustup sh -s -- -y --profile minimal --default-toolchain $RUST_VERSION && \
    source /cargo/env
ADD build.sh /usr/local/bin/
RUN rustup default stable

RUN curl -L http://ftp.gnome.org/pub/gnome/sources/librsvg/2.42/librsvg-2.42.3.tar.xz > librsvg-2.42.3.tar.xz && \
    tar -xf librsvg-2.42.3.tar.xz && \
    cd librsvg-2.42.3 && \
    ./configure --prefix=/opt --disable-static && \
    make && \
    make install

RUN cp -a /opt/lib/librsvg-2.so* /build/share/lib 


RUN curl -L https://downloads.sourceforge.net/lcms/lcms2-2.12.tar.gz > lcms2-2.12.tar.gz && \
    tar xvf lcms2-2.12.tar.gz && \
    cd lcms2-2.12 && \
    ./configure --prefix=/opt --disable-static && \
    make && \
    make install

RUN cp -a /opt/lib/liblcms2.so* /build/share/lib


RUN curl -L https://github.com/libexif/libexif/releases/download/libexif-0_6_22-release/libexif-0.6.22.tar.xz > libexif-0.6.22.tar.xz && \
    tar -xf libexif-0.6.22.tar.xz && \
    curl -L http://www.linuxfromscratch.org/patches/blfs/svn/libexif-0.6.22-security_fixes-1.patch > libexif-0.6.22-security_fixes-1.patch && \
    cd libexif-0.6.22 && \
    patch -Np1 -i ../libexif-0.6.22-security_fixes-1.patch && \
    ./configure --prefix=/opt --disable-static && \
    make && \
    make install

RUN cp -a /opt/lib/libexif.so* /build/share/lib

# Install libvips.
#
RUN curl -L https://github.com/libvips/libvips/releases/download/v${VIPS_VERSION}/vips-${VIPS_VERSION}.tar.gz > vips-${VIPS_VERSION}.tar.gz && \
    tar -xf vips-${VIPS_VERSION}.tar.gz && \
    cd vips-${VIPS_VERSION} && \
    ./configure \
    --prefix=/opt \
    --disable-gtk-doc \
    --without-magick \
    --with-expat=/opt \
    --with-giflib-includes=/opt/local/include \
    --with-giflib-libraries=/opt/local/lib && \
    make && \
    make install && \
    echo /opt/lib > /etc/ld.so.conf.d/libvips.conf && \
    ldconfig

RUN cp -a /opt/lib/libvips.so* /build/share/lib

# Store the VIPS_VERSION variable in a file, accessible to the deploy script.
#
RUN echo $VIPS_VERSION >> ./share/.VIPS_VERSION

# Create an /build/share/opt/lib64 symlink for shared objects.
#
RUN cd ./share && ln -s lib lib64

# try to fix broken pango
# should prob try taking out pango-devel
# RUN pango-querymodules > '/opt/etc/pango/pango.modules'

# Zip up contents so final `lib` can be placed in /opt layer.
#
RUN cd ./share && \
    zip --symlinks -r libvips.zip .